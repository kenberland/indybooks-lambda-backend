B1;5202;0cB1;5202;0cAWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: REST API for the Indybooks backend
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'DELETE,GET,HEAD,OPTIONS,POST,PUT'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        Authorizers:
          MyCognitoAuth:
            UserPoolArn: arn:aws:cognito-idp:us-east-2:308748601361:userpool/us-east-2_WKijNuDww
            Identity:
              Header: Authorization
  StoresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          INDY_ENV: production
      Policies:
        - DynamoDBReadPolicy:
            TableName: indybooks_stores_production
      Handler: stores/index.stores_handler
      Runtime: ruby2.7
      CodeUri: ./
      Events:
        StoresAPI:
          Type: Api
          Properties:
            Path: /stores/{proxy+}
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
  OffersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          INDY_ENV: production
      Policies:
        - DynamoDBReadPolicy:
            TableName: indybooks_inventory_production
      Handler: offers/index.offers_handler
      Runtime: ruby2.7
      CodeUri: ./
      Events:
        StoresAPI:
          Type: Api
          Properties:
            Path: /offers/{proxy+}
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
  PurchasesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          INDY_ENV: production
      Policies:
        - DynamoDBReadPolicy:
            TableName: indybooks_purchases_production
      Handler: purchases/index.purchases_handler
      Runtime: ruby2.7
      CodeUri: ./
      Events:
        StoresAPI:
          Type: Api
          Properties:
            Path: /purchases/{proxy+}
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
  PurchasesPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          INDY_ENV: production
      Policies:
        - DynamoDBWritePolicy:
            TableName: indybooks_purchases_production
      Handler: purchases_post/index.purchases_post_handler
      Runtime: ruby2.7
      CodeUri: ./
      Events:
        StoresAPI:
          Type: Api
          Properties:
            Path: /purchases
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
  AuthMyStoresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          INDY_ENV: production
      Policies:
      Handler: auth/my/stores/index.auth_my_stores_handler
      Runtime: ruby2.7
      CodeUri: ./
      Events:
        StoresAPI:
          Type: Api
          Properties:
            Path: /auth/my/stores
            Method: GET
            Auth:
               Authorizer: MyCognitoAuth
            RestApiId:
              Ref: ApiGatewayApi
  AuthInventoryStoreIsbn:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          INDY_ENV: production
          ISBN_SECRET: '{{resolve:secretsmanager:com.isbndb.api2.auth.v2:SecretString:secret}}'
      Policies:
      Handler: auth/inventory/store/isbn/index.auth_inventory_store_isbn_handler
      Runtime: ruby2.7
      CodeUri: ./
      Events:
        StoresAPI:
          Type: Api
          Properties:
            Path: /auth/inventory/{proxy+}
            Method: GET
            Auth:
               Authorizer: MyCognitoAuth
            RestApiId:
              Ref: ApiGatewayApi


